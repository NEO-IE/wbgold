//sg
package xmltomysql;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import meta.DatabaseMetadata;
import meta.XMLMetaData;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 * This class is responsible for flattening the xml generated by
 * worldbankdataparsing in a format suitable for loading into "vals" table of
 * the world bank database.
 * 
 * @author aman
 * 
 */
public class FlattenXML {
	/**
	 * Parses the xml generated from the world bank csv
	 * 
	 * @param the
	 *            file in which the flattened values are desired
	 * @throws IOException 
	 */
	public static void flatten(String op) throws IOException {
		PrintWriter resultPrinter = new PrintWriter(op);
		File fXmlFile = new File(DatabaseMetadata.BaseDir + meta.DatabaseMetadata.opFile);
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder;
		Document doc = null;
		try {
			dBuilder = dbFactory.newDocumentBuilder();
			doc = dBuilder.parse(fXmlFile);

		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	//	doc.getDocumentElement().normalize();
		NodeList nList = doc.getElementsByTagName(meta.XMLMetaData.HEAD_TAG);
		
		for(int i = 0; i < nList.getLength(); i++) {
			Node queryNode = nList.item(i);
			NodeList queryNodeChldList = queryNode.getChildNodes();
			
			Node queryStringNode = queryNodeChldList.item(XMLMetaData.QUERY_STR_POS);
			Node answerSetNode = queryNodeChldList.item(XMLMetaData.ANSWER_POS);
			String[] queryInfo = queryStringNode.getTextContent().split(XMLMetaData.ENTITY_ATTR_SEP);
			String entityCode = queryInfo[0];
			String attrCode = queryInfo[1];
			//System.out.println(answerSetNode.getTextContent());
			NodeList valueNodes = answerSetNode.getChildNodes();
			
			for(int j = 1; j < valueNodes.getLength(); j +=2) { //skip the range
				String val = valueNodes.item(j).getTextContent().trim();
				org.w3c.dom.Element valele = (org.w3c.dom.Element) valueNodes.item(j); 
				String time = valele.getAttribute("time");
				resultPrinter.write(entityCode + "\t" + attrCode + "\t" + val + "\t" + time + "\n");
			}
			
		}
		resultPrinter.close();
	}
	public static void main(String args[]) throws IOException {
		FlattenXML.flatten("res");
	}
}
